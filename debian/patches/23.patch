From 2dc0a8e74448227e4eb7548bce7e9dc872122543 Mon Sep 17 00:00:00 2001
From: Julien Schueller <schueller@phimeca.com>
Date: Fri, 23 Apr 2021 10:58:02 +0200
Subject: [PATCH] Fix vector::operator()

The address of the iterator can be invalid when glibc assertions are
enabled.
The address of begin first element pointed by begin() works, or better
vector::data() is even better if c++11 is allowed.

Here is the trace:

/usr/include/c++/10.2.0/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::front() [with _Tp = double; _Alloc = std::allocator<double>; std::vector<_Tp, _Alloc>::reference = double&]: Assertion '__builtin_expect(!this->empty(), true)' failed.

Program received signal SIGABRT, Aborted.
0x00007ffff7a63ef5 in raise () from /usr/lib/libc.so.6
(gdb) bt
---
 src/Interfaces/BonTypes.hpp | 13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

diff --git a/src/Interfaces/BonTypes.hpp b/src/Interfaces/BonTypes.hpp
index 2924dfa47..971a795bc 100644
--- a/Bonmin/src/Interfaces/BonTypes.hpp
+++ b/Bonmin/src/Interfaces/BonTypes.hpp
@@ -29,18 +29,11 @@ class vector : public std::vector<T>{
 
 /** Access pointer to first element of storage.*/
 inline T* operator()(){
-#if defined(_MSC_VER)
-  if (std::vector<T>::size() == 0)
-    return NULL;
-#endif
-return &std::vector<T>::front();}
+  return &(*std::vector<T>::begin());
+}
 /** Access pointer to first element of storage.*/
 inline const T* operator()() const {
-#if defined(_MSC_VER)
-  if (std::vector<T>::size() == 0)
-    return NULL;
-#endif
-return &std::vector<T>::front();
+  return &(*std::vector<T>::begin());
 }
 };
 
